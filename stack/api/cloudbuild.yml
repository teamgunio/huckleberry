steps:
- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    git fetch origin 'refs/tags/*:refs/tags/*'
    git describe --exact-match --tags HEAD
    [[ ! -z "$(git describe --exact-match --tags HEAD)" ]] && echo "Tag Found"
    ( [[ ! -z "$(git describe --exact-match --tags HEAD)" ]] && \
      [[ "$BRANCH_NAME" == "master" ]] && \
      echo "This build should deploy."
    ) \
    || echo "This build should not deploy; it's not a tag, or it's not on master."

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker pull gcr.io/$PROJECT_ID/huckleberry/api:latest || exit 0

- name: 'gcr.io/cloud-builders/docker'
  args:
  - 'run'
  - '--network=cloudbuild'
  - '-d'
  - '-e=POSTGRES_USER=root'
  - '-e=POSTGRES_PASSWORD=root'
  - '-e=POSTGRES_DB=huckleberry_test'
  - '-p=5432:5432'
  - '--name=huckleberry-postgres'
  - 'postgres:11'

- name: 'gcr.io/cloud-builders/docker'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    docker run \
    --network=cloudbuild \
    --name=alpine-check \
    alpine:latest \
    sh -c 'while ! nc -v -z huckleberry-postgres 5432; do echo -e "\033[92m  ---> waiting for postgres ... \033[0m"; sleep 1; done'

- name: 'gcr.io/cloud-builders/yarn:node-10.10.0'
  args: ['install']
  dir: 'stack/api'

- name: 'gcr.io/cloud-builders/yarn:node-10.10.0'
  args: ['test']
  dir: 'stack/api'
  env:
  - 'AUTH0_AUDIENCE=https://huckleberry.gun.io/api'
  - 'AUTH0_DOMAIN=gun-io.auth0.com'
  - 'DB_DATABASE=huckleberry_test'
  - 'DB_HOST=huckleberry-postgres'
  - 'DB_PASS=root'
  - 'DB_PORT=5432'
  - 'DB_USER=root'
  - 'PORT=3001'

- name: 'gcr.io/cloud-builders/yarn:node-10.10.0'
  args: ['run', 'test:e2e']
  dir: 'stack/api'
  env:
  - 'AUTH0_AUDIENCE=https://huckleberry.gun.io/api'
  - 'AUTH0_DOMAIN=gun-io.auth0.com'
  - 'DB_DATABASE=huckleberry_test'
  - 'DB_HOST=huckleberry-postgres'
  - 'DB_PASS=root'
  - 'DB_PORT=5432'
  - 'DB_USER=root'
  - 'PORT=3001'

- name: 'gcr.io/cloud-builders/yarn:node-10.10.0'
  args: ['build']
  dir: 'stack/api'

- name: 'gcr.io/cloud-builders/docker'
  args: ['build', '-t', 'gcr.io/$PROJECT_ID/huckleberry/api:$SHORT_SHA', '--cache-from', 'gcr.io/$PROJECT_ID/huckleberry/api:latest', '.']
  dir: 'stack/api'

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/huckleberry/api:$SHORT_SHA']

- name: 'gcr.io/cloud-builders/docker'
  args: ['tag', 'gcr.io/$PROJECT_ID/huckleberry/api:$SHORT_SHA', 'gcr.io/$PROJECT_ID/huckleberry/api:latest']

- name: 'gcr.io/cloud-builders/docker'
  args: ['push', 'gcr.io/$PROJECT_ID/huckleberry/api:latest']

- name: 'gcr.io/cloud-builders/kubectl'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    ( [[ ! -z "$(git describe --exact-match --tags HEAD)" ]] && \
      [[ "$BRANCH_NAME" == "master" ]] && \
      gcloud container clusters get-credentials \
        --project="$PROJECT_ID" \
        --zone="us-central1-a" \
        "tools" && \
      /builder/kubectl.bash set image deployment huckleberry-api huckleberry-api=gcr.io/$PROJECT_ID/huckleberry/api:$SHORT_SHA && \
      /builder/kubectl.bash rollout status deployment huckleberry-api
    ) \
    || echo "Skipping deploy"
  env:
  - 'CLOUDSDK_COMPUTE_ZONE=us-central1-a'
  - 'CLOUDSDK_CONTAINER_CLUSTER=tools'
